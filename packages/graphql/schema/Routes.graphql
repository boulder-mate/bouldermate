type Route  {
    id: String!
    created: String!
    last_updated: String!
    type: RouteTypes!
    grades: Grades!
    color: String!
    name: String!
    routesetters: [String]!
    active: Boolean!
    image: String!
    location: String!
    ratings: [Rating]
    comments: [Comment] 
}

enum RouteTypes {
    Boulder,
    Lead,
    TopRope,
    Trad,
    Ice
}

type Grade {
    type: String!
    value: String!
}

type Grades {
    routesetter: Grade
    user: [Grade]!
}

input RouteInput {
    type: RouteTypes!
    color: String!
    name: String!
    image: Upload!
    location: String!
    routesetters: [String]!
    routesetter_grade: GradeInput
    notes: String
}

input GradeInput {
    type: String!
    value: String!
}

type Query {
    getRouteById: Route
}

type Mutation {
    createRoute(route: RouteInput!): String!
}
